name: Deploy Azure Function App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create resource group if not exists
        run: |
          az group create --name crypto-pilot-rg-dev --location uksouth

      - name: Deploy Bicep
        id: deploy_bicep
        run: |
          az deployment group create \
            --resource-group crypto-pilot-rg-dev \
            --template-file .github/workflows/main.bicep \
            --parameters \
              sqlAdminLogin='${{ secrets.SQL_ADMIN_LOGIN }}' \
              sqlAdminPassword='${{ secrets.SQL_ADMIN_PASSWORD }}' \
            --output json > bicep_output.json
        # Save output for next step

      - name: Get function app name from Bicep output
        id: get_funcapp_name
        run: |
          echo "FUNCTION_APP_NAME=$(jq -r '.properties.outputs.functionAppName.value' bicep_output.json)" >> $GITHUB_ENV

      - name: Get SQL server and database names from Bicep output
        id: get_sql_names
        run: |
          echo "SQL_SERVER_NAME=$(jq -r '.properties.outputs.sqlServerName.value' bicep_output.json)" >> $GITHUB_ENV
          echo "SQL_DATABASE_NAME=$(jq -r '.properties.outputs.sqlDatabaseName.value' bicep_output.json)" >> $GITHUB_ENV

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Publish Azure Function
        run: |
          dotnet publish ./Crypto.Pylot.Functions/Crypto_Pylot_Functions.csproj -c Release -o ./publish_output

      - name: Deploy to Azure Function App
        uses: azure/functions-action@v1
        with:
          app-name: ${{ env.FUNCTION_APP_NAME }}
          package: ./publish_output

      - name: Install sqlcmd
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          sudo apt-add-repository "$(curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list)"
          sudo apt-get update
          sudo apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          export PATH="$PATH:/opt/mssql-tools/bin"

      - name: Deploy database schema
        env:
          SQL_SERVER: ${{ env.SQL_SERVER_NAME }}
          SQL_DB: ${{ env.SQL_DATABASE_NAME }}
          SQL_USER: ${{ secrets.SQL_ADMIN_LOGIN }}
          SQL_PASSWORD: ${{ secrets.SQL_ADMIN_PASSWORD }}
        run: |
          sqlcmd -S "$SQL_SERVER.database.windows.net" -d "$SQL_DB" -U "$SQL_USER" -P "$SQL_PASSWORD" -i "./Crypto.Pilot.Database/create-tables.sql"
